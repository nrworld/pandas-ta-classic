name: CI

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  # Latest stable Python version - update this when new Python versions are released
  LATEST_PYTHON_VERSION: "3.13"

jobs:
  # Basic structure validation that doesn't require dependencies
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.LATEST_PYTHON_VERSION }}
    
    - name: Validate package structure
      run: |
        python validate_structure.py

  # Full test suite with dependencies  
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Support latest stable Python version and 4 consecutive previous versions
        # Update LATEST_PYTHON_VERSION env var when new Python versions are released
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies for ta-lib
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git
        git clone https://github.com/ta-lib/ta-lib.git
        cd ta-lib
        if [ ! -f configure ]; then
          chmod +x autogen.sh
          ./autogen.sh
        fi
        ./configure --prefix=/usr
        make
        sudo make install
        sudo ldconfig

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy pandas
        pip install -r requirements.txt
        pip install TA-Lib
        pip install -e .
    
    - name: Run tests
      run: |
        python -m unittest discover tests/ -v
    
    - name: Test package installation
      run: |
        python -c "import pandas_ta_classic as ta; print('Package imported successfully')"
